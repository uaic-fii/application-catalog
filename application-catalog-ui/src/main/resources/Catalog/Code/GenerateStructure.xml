<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Catalog.Code.GenerateStructure" locale="">
  <web>Catalog.Code</web>
  <name>GenerateStructure</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Catalog.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>GenerateStructure</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#macro(editFormByPass)
  {{html clean=false}}
    &lt;form action="#"&gt;
      &lt;input type="hidden" name="action" value="value" /&gt;
    &lt;/form&gt;
  {{/html}}
#end
####
##Displays a field to select the year and a generat button
##
#macro(displayGenerateCourses)
  {{html clean=false}}
  &lt;div class="row" style='padding:10px 0;'&gt;
    &lt;div class="col-sm-6"&gt;
      &lt;form action="$!{doc.getURL('edit')}"&gt;
        #set($nextYear = $!{datetool.year} + 1)
        &lt;strong&gt;Generati structura pentru anul universitar:&lt;/strong&gt;&lt;/br&gt;
        &lt;input type="text" class='yearField col-sm-3' name="an" value="$!{datetool.year}-$!{nextYear}"&gt;&lt;/br&gt;&lt;/br&gt;
        &lt;input type="hidden" id="doGenerate" name="generate" value="curricula"&gt;
        &lt;input type="submit" class='btn btn-primary col-sm-3' value="Generază"&gt;
      &lt;/form&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  {{/html}}
#end

#macro(displayImportStudents)
  #set($location = ${xwiki.getDocument('Catalog.Code.CatalogActions').getURL()})
  {{html clean=false}}
    &lt;div class="row" style='padding:10px 0;'&gt;
      &lt;div class="col-sm-6"&gt;
        &lt;form action="$location"&gt;
          &lt;strong&gt;Importati studenții din fisier csv:&lt;/strong&gt;&lt;/br&gt;
          &lt;input type="hidden" name="action" value="importStudents" /&gt;
          &lt;input type="submit" class='btn btn-primary col-sm-3' value="Importă" /&gt;
        &lt;/form&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  {{/html}}
#end

#macro(displayInitializeStudents)
  {{html wiki=true clean=false}}
    &lt;div class="row lastrow" style='padding:10px 0 0 0;'&gt;
      &lt;div class="col-sm-6"&gt;
        &lt;form action="$!{doc.getURL('edit')}"&gt;
          #set($nextYear = $!{datetool.year} + 1)
          &lt;strong&gt;Atribuiti obiecte curs documentelor de tip student:&lt;/strong&gt;&lt;/br&gt;
          &lt;input type="hidden" id="initializeStudents" name="initialize" value="students"&gt;
          #set($initObj = $doc.getObject('Catalog.Code.InitializationClass'))
          #set($lasvalueOfBatch = $services.query.hql("select distinct prop.value from BaseObject as obj, StringProperty as prop where obj.className='Catalog.Code.Student_Class' and obj.id=prop.id.id and prop.id.name='batch'").execute())
          #set($lasvalueOfCYear = $services.query.hql("select space.name from XWikiSpace as space where space.parent = 'Catalog' and space.name &lt;&gt; 'Code' and space.name &lt;&gt; 'Students'").execute())
          #set($indexBatch = $lasvalueOfBatch.size() - 1)
          #set($indexOfCYear = $lasvalueOfCYear.size() - 1)
          #if($lasvalueOfBatch.size() &gt; 0 &amp;&amp; $lasvalueOfCYear.size() &gt; 0)
            #if("$!{initObj.getProperty('studentBatch').value}" != "$!{lasvalueOfBatch[$indexBatch]}" || "$!{initObj.getProperty('courseYear').value}" != "$!{lasvalueOfCYear[$indexOfCYear]}")
              #set($discard = $doc.set('studentBatch', $!lasvalueOfBatch[$indexBatch]))
              #set($discard = $doc.set('courseYear', $!lasvalueOfCYear[$indexOfCYear]))
              #set($discard = $doc.save())
            #end
          #elseif("$!{initObj.getProperty('studentBatch').value}" != "" &amp;&amp; "$!{initObj.getProperty('courseYear').value}" == "")
            #set($discard = $doc.set('studentBatch', ''))
            #set($discard = $doc.set('courseYear', ''))
           #set($discard = $doc.save())
          #end
          &lt;div class='row' style='padding:5px 0;'&gt;&lt;div class="col-sm-6"&gt;Structura anului universitar&lt;/div&gt;&lt;div class="col-sm-6"&gt;$doc.display('courseYear')&lt;/div&gt;&lt;/div&gt;
          &lt;div class='row' style='padding:5px 0;'&gt;&lt;div class="col-sm-6"&gt;Studenții din seria&lt;/div&gt;&lt;div class="col-sm-6"&gt;$doc.display('studentBatch')&lt;/div&gt;&lt;/div&gt;
          &lt;input type="submit" class='btn btn-primary col-sm-3' value="Inițializează"&gt;
        &lt;/form&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  {{/html}}
#end
####
##Generate a the course documents references based on the curriculum structure
##
#macro(generateDocuments_Materii $an $space $typeOfDegree $delete)
  #if("$request.generate" == 'curricula')
    #set($query = "where doc.object(Structure.Code.CourseClass).TypeofDegree = :degreeType")
    #set($results = $services.query.xwql($query).bindValue('degreeType', $typeOfDegree).execute())
    #set($docList = [])
    #foreach($course in $results)
      #set($document = $xwiki.getDocument($course))
      #if(!$document.isNew() &amp;&amp; "$document" != 'Structure.CourseTemplate')
        #set($courseDocumentName = $stringtool.substringBefore("$document.name", 'Description'))
        #set($documentReference = $services.model.createDocumentReference($xcontext.database, $space, $courseDocumentName))
        #set($discard = $docList.add($documentReference))
        #set($discard = $xwiki.copyDocument("Catalog.Code.CatalogTemplate", $documentReference, '', true, false))
        #set($newDoc = $xwiki.getDocument($documentReference))
        #if($delete == true)
          #set($discard = $newDoc.delete())
        #else
          #if($newDoc.title=="Catalog Template")
            #set($obj = $newDoc.getObject("Catalog.Code.CatalogClass"))
            #set($obj2 = $newDoc.getObject("Catalog.Code.CatalogPropertiesClass"))
            #set($discard = $newDoc.setTitle($!{stringtool.substringBefore("$document.name", 'Description')}))
            #set($discard = $newDoc.setHidden(false))
            #set($discard = $obj.set('course', $!{document.getObject('Structure.Code.CourseClass').getProperty('CourseName').value}))
            #set($discard = $obj.set('year', $an))
            #set($discard = $newDoc.save())
          #end
        #end
      #end
    #end
    #set($referenceList_Materii = $docList)
    #set($anDocRef = $services.model.createDocumentReference($xcontext.database, $space, "WebHome"))
    #set($anDoc = $xwiki.getDocument($anDocRef))
    #set($discard = $anDoc.setContent('{{children/}}'))
    #set($discard = $anDoc.save())
  #end
#end

####
##Reinitialize batch import
##
#macro(clearBIObject)
  #set($document = $xwiki.getDocument('Catalog.Code.GenerateStudents'))
  #set($biobj = $document.getObject('BatchImport.BatchImportClass'))
  #set($generateStudentsURL = "$!{document.getURL()}?sheet=Catalog.Code.BatchImportCustomSheet")
  #if($biobj)
    #set($discard = $document.removeObject($biobj))
    #set($discard = $document.save())
    #set($discard = $response.sendRedirect($generateStudentsURL))
  #else
    #set($discard = $response.sendRedirect($generateStudentsURL))
  #end
#end

#macro(addCourseObjects $coursesList $documentToAlter)
  #set($discard = $coursesList.remove('Catalog.Code.CatalogTemplate'))
  #if(!$documentToAlter.getObject('Catalog.Code.Course_Class'))
    #if(!$documentToAlter.getObject('XWiki.XWikiRights'))
      #set($studObj = $documentToAlter.getObject('Catalog.Code.Student_Class'))
      #set($studentEmail = $studObj.getProperty('email').value.trim())
      #set($studentDocName = $studentEmail.substring(0, $studentEmail.indexOf('@')).replace('.',''))
      #set($query = "where doc.fullName like '%${studentDocName}'")
      #set($corespondingUser = $services.query.xwql($query).execute())
      #if($corespondingUser.size()&gt;0)
        #set($rightsObj = $documentToAlter.newObject('XWiki.XWikiRights'))
        #set($discard = $rightsObj.set('levels', 'view'))
        #set($discard = $rightsObj.set('users', $corespondingUser[0]))
        #set($discard = $rightsObj.set('allow', 1))
      #end
    #end
    #foreach($course in $coursesList)
      #set($courseDoc = $xwiki.getDocument($course))
      #if(!$courseDoc.isNew())
        #set($courseObj = $documentToAlter.newObject('Catalog.Code.Course_Class'))
        #if($courseObj.courseName != $courseDoc.title)
          #set($discard = $courseObj.set('courseName', $courseDoc.title))
          #set($discard = $courseObj.set('courseYear', $!request.get('Catalog.Code.InitializationClass_0_courseYear')))
        #end
      #end
    #end
    #set($discard = $documentToAlter.save())
  #end
#end

####
##Create cours objects for student documents
##
#macro(initializeStudents)
  #if("$request.initialize" == 'students')
    #set($studentBatch = $request.get('Catalog.Code.InitializationClass_0_studentBatch'))
    #set($query = "from doc.object(Catalog.Code.Student_Class) as student where student.batch = '${studentBatch}'")
    #set($students = $services.query.xwql($query).execute())
    #set($space = $request.get('Catalog.Code.InitializationClass_0_courseYear').trim())
    #set($query = "from doc.object(Catalog.Code.CatalogClass) as course where doc.space like 'Catalog.${space}' or doc.space like 'Catalog.${space}.%'")
    #set($courses = $services.query.xwql($query).execute())
    #foreach($student in $students)
      #set($studentDocument = $xwiki.getDocument($student))
      #if(!$studentDocument.isNew())
        #addCourseObjects($courses, $studentDocument)
      #end
    #end
    #set($studentsSpace = $xwiki.getDocument('Catalog.Students.WebPreferences'))
    #set($globalRightsObj = $studentsSpace.newObject('XWiki.XWikiGlobalRights'))
    #set($discard = $globalRightsObj.set('levels', 'view'))
    #set($discard = $globalRightsObj.set('groups', 'XWiki.XWikiAllGroup'))
    #set($discard = $globalRightsObj.set('allow', 0))
    #set($discard = $studentsSpace.save())
    &lt;br/&gt;Documente Initializate: $students.size()&lt;br/&gt;
  #end
#end
{{/velocity}}</content>
</xwikidoc>
