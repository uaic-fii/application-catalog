<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Catalog.Code.GenerateStructure" locale="">
  <web>Catalog.Code</web>
  <name>GenerateStructure</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Catalog.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>GenerateStructure</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
####
##Displays a field to select the year and a generat button
##
#macro(displayGenerateCourses)
  {{html clean=false}}
    &lt;form action="$!{doc.getURL('edit')}"&gt;
      #set($nextYear = $!{datetool.year} + 1)
      Generati structura pentru anul: &lt;input type="text" name="an" value="$!{datetool.year}-$!{nextYear}"&gt;
      &lt;input type="hidden" id="doGenerate" name="generate" value="curricula"&gt;
      &lt;input type="submit" value="Generază"&gt;
    &lt;/form&gt;
  {{/html}}
#end

#macro(displayImportStudents)
  #set($location = ${xwiki.getDocument('Catalog.Code.CatalogActions').getURL()})
  {{html clean=false}}
    Importati studenții din fisier csv:
    &lt;form action="$location"&gt;
      &lt;input type="hidden" name="action" value="importStudents" /&gt;
      &lt;input type="submit" value="Importă" /&gt;
    &lt;/form&gt;
  {{/html}}
#end

#macro(editFormByPass)
  {{html clean=false}}
    &lt;form action="#"&gt;
      &lt;input type="hidden" name="action" value="value" /&gt;
    &lt;/form&gt;
  {{/html}}
#end
####
##Generate a the course documents references based on the curriculum structure
##
#macro(generateDocuments_Materii $an $space $typeOfDegree $delete)
  #if("$request.generate" == 'curricula')
    #set($query = "where doc.object(Structure.Code.CourseClass).TypeofDegree = :degreeType")
    #set($results = $services.query.xwql($query).bindValue('degreeType', $typeOfDegree).execute())
    #set($docList = [])
    #foreach($course in $results)
      #set($document = $xwiki.getDocument($course))
      #if(!$document.isNew() &amp;&amp; "$document" != 'Structure.CourseTemplate')
        #set($courseDocumentName = $stringtool.substringBefore("$document.name", 'Description') + $an)
        #set($documentReference = $services.model.createDocumentReference($xcontext.database, $space, $courseDocumentName))
        #set($discard = $docList.add($documentReference))
        #set($newDoc = $xwiki.getDocument($documentReference))
        #if($delete == true)
          #set($discard = $newDoc.delete())
        #else
          #set($obj = $newDoc.newObject("Catalog.Code.CatalogClass"))
          #set($discard = $newDoc.setTitle($!{stringtool.substringBefore("$document.name", 'Description')}))
          #set($discard = $obj.set('course', $!{document.getObject('Structure.Code.CourseClass').getProperty('CourseName').value}))
          #set($discard = $obj.set('year', $an))
          #set($discard = $newDoc.save())
        #end
      #end
    #end
    #set($referenceList_Materii = $docList)
    #set($anDocRef = $services.model.createDocumentReference($xcontext.database, $space, "WebHome"))
    #set($anDoc = $xwiki.getDocument($anDocRef))
    #set($discard = $anDoc.setContent('{{children/}}'))
    #set($discard = $anDoc.save())
  #end
#end

####
##Reinitialize batch import
##
#macro(clearBIObject)
  #set($document = $xwiki.getDocument('Catalog.Code.GenerateStudents'))
  #set($biobj = $document.getObject('BatchImport.BatchImportClass'))
  #set($generateStudentsURL = "$!{document.getURL()}?sheet=Catalog.Code.BatchImportCustomSheet")
  #if($biobj)
    #set($discard = $document.removeObject($biobj))
    #set($discard = $document.save())
    #set($discard = $response.sendRedirect($generateStudentsURL))
  #else
    #set($discard = $response.sendRedirect($generateStudentsURL))
  #end
#end

####
##Create course object for student documents
##
{{/velocity}}</content>
</xwikidoc>
